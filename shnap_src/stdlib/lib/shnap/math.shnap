fib_infinite_internal = @ seedOne=0,seedTwo=1 {
    currentVal = seedOne
    nextVal = seedTwo

    hasNext = $ return: true

    next = $ {
        ret = currentVal
        currentVal = nextVal
        nextVal = nextVal + ret
        return: ret
    }

}

fib_internal = @ count,seedOne=0,seedTwo=1 {
    currentVal = seedOne
    nextVal = seedTwo
    counter = 0

    hasNext = $ {
        return: counter < count
    }

    next = $ {
        counter += 1
        ret = currentVal
        currentVal = nextVal
        nextVal = nextVal + ret
        return: ret
    }

}

private fib_infinite_internal
private fib_internal

fib = $ count=void,seedOne=0,seedTwo=1 {
    if count == void {
        return: fib_infinite_internal(seedOne, seedTwo)
    } else {
        return: fib_internal(count, seedOne, seedTwo)
    }
}

abs = $ obj {return: if(obj < 0) -obj else obj}