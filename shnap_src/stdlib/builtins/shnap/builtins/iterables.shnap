iterableStr = $ arr {
    state = "["
    for arr {
        state += it
        if _it.hasNext()
            state += ", "
    }
    return: state + "]"
}

isIterator = $ (obj) return: hasFunction(obj,"next",0) && hasFunction(obj,"hasNext",0)
isIterable = $ (obj) return: hasFunction(obj,"iterator",0) || isIterator(obj)
iterator = $ (obj) {
    if hasFunction(obj,"iterator",0)
        return: obj.iterator()
    else
        return: obj
}

list = $ (val=[]) return: import("shnap.collections.array_list").arrayList(elements=val)
lazyList = $ iter return: import("shnap.collections.lazy_list").lazyList(iter)

len = $ a => a.len()