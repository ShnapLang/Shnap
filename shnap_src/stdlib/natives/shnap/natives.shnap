import = native::sys.import
importFrom = native::sys.importFrom
importAll = native::sys.importAll

sleep = native::sys.sleep

paramCount = native::sys.paramCount
reqParamCount = native::sys.reqParamCount
defParamCount = native::sys.defParamCount
get = native::sys.get
set = native::sys.set
del = native::sys.del
fields = native::sys.fields
has = $ obj,field,params=void {
    if params == void {
        return: get(obj, field) != void
    } else if params == null {
        val = get(obj, field)
        return: val != void && paramCount(val) != void
    } else {
        val = get(obj, field)
        return: val != void && reqParamCount(val) == params
    }
}
hasFunction = $ (obj,field,params=null) return: has(obj, field, params)

print = native::sys.print
printErr = native::sys.printErr

println = $ arg="" print(arg + "\n")
printlnErr = $ arg="" printErr(arg + "\n")


//Types
javaClass = native::java.javaClass
javaArray = native::java.javaArray

num = native::type.num
str = native::type.str
bool = native::type.bool
array = native::type.array
char = native::type.char
java = native::type.java
newArray = native::type.newArray

int32 = native::type.int32
int64 = native::type.int64
float64 = native::type.float64 //Right now there's no float32, since it's introduction would created complex casting rules