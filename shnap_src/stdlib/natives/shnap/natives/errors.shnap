isIterator = $ (obj) return: hasFunction(obj,"next",0) && hasFunction(obj,"hasNext",0)
isIterable = $ (obj) return: hasFunction(obj,"iterator",0) || isIterator(obj)

private isIterator
private isIterable

error = @(name,message,cause=null,parents=null){
    setType(this, "error")

    if parents == null {
        parents = ["shnap.Error"]
    } else {
        parents.append("shnap.Error")
    }

    asString = ${
        return: name + ": " + str(message) + if (cause != null) {", caused by:\n" + str(cause)} else {"\n"}
    }

    is = $ (type) {
        if cause != null && cause.is(type) {
            return: true
        }

        if type == name {
            return: true
        }

        if type.parents != void {
            other = type.parents
            if isIterable(other) {
                for otherType : other {
                    if parents.contains(otherType) || type == other {
                        return: true
                    }
                }
                return: false
            }
        }

        return: parents.contains(type)
    }

    isError = true

}

errorCls = $ (name,parents=null) return: $ (message,cause=null) return: error(name,message,cause,parents)
noimport errorCls

runtimeError = errorCls("shnap.RuntimeError")

ioError = errorCls("shnap.IOError")
fileNotFoundError = errorCls("shnap.FileNotFoundError", ["shnap.IOError"])
typeError = errorCls("shnap.TypeError")
returnTypeError = errorCls("shnap.ReturnTypeError", ["shnap.TypeError"])
accessError = errorCls("shnap.AcessError")
interruptedError = errorCls("shnap.InterruptedError")
importError = errorCls("shnap.ImportError")

invocationError = errorCls("shnap.InvocationError")
parameterError = errorCls("shnap.ParameterError", ["shnap.InvocationError"])
paramSizeError = errorCls("shnap.ParameterSizeError", ["shnap.ParameterError", "shnap.InvocationError"])
paramMismatchError = errorCls("shnap.ParameterMismatchError", ["shnap.ParameterError", "shnap.InvocationError"])
parseError = errorCls("shnap.ParseError")
indexError = errorCls("shnap.IndexError")
rangeError = errorCls("shnap.RangeError")
absentFieldError = errorCls("shnap.AbsentFieldError")

iterationError = errorCls("shnap.IterationError")